// <auto-generated />
using System;
using CGServer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CGServer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231007165937_AdicionandoTesteX")]
    partial class AdicionandoTesteX
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CGEntity.EntitiesDbSet.DbSetCategoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("CGEntity.EntitiesDbSet.DbSetFavorecido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Favorecidos");
                });

            modelBuilder.Entity("CGEntity.EntitiesDbSet.DbSetFornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Fornecedores");
                });

            modelBuilder.Entity("CGEntity.EntitiesDbSet.DbSetInstituicao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Instituicoes");
                });

            modelBuilder.Entity("CGEntity.EntitiesDbSet.DbSetLancamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DbSetCategoriaId")
                        .HasColumnType("int");

                    b.Property<int?>("DbSetFavorecidoId")
                        .HasColumnType("int");

                    b.Property<int?>("DbSetFornecedorId")
                        .HasColumnType("int");

                    b.Property<int?>("DbSetInstituicaoId")
                        .HasColumnType("int");

                    b.Property<int?>("DbSetModalidadeId")
                        .HasColumnType("int");

                    b.Property<int?>("DbSetPagadorId")
                        .HasColumnType("int");

                    b.Property<int?>("DbSetSubCategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Recorrente")
                        .HasColumnType("bit");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DbSetCategoriaId");

                    b.HasIndex("DbSetFavorecidoId");

                    b.HasIndex("DbSetFornecedorId");

                    b.HasIndex("DbSetInstituicaoId");

                    b.HasIndex("DbSetModalidadeId");

                    b.HasIndex("DbSetPagadorId");

                    b.HasIndex("DbSetSubCategoriaId");

                    b.ToTable("Lancamentos");
                });

            modelBuilder.Entity("CGEntity.EntitiesDbSet.DbSetModalidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Modalidades");
                });

            modelBuilder.Entity("CGEntity.EntitiesDbSet.DbSetPagador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Pagadores");
                });

            modelBuilder.Entity("CGEntity.EntitiesDbSet.DbSetSubCategoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DbSetCategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DbSetCategoriaId");

                    b.ToTable("SubCategorias");
                });

            modelBuilder.Entity("CGEntity.EntitiesDbSet.DbSetLancamento", b =>
                {
                    b.HasOne("CGEntity.EntitiesDbSet.DbSetCategoria", null)
                        .WithMany("Lancamentos")
                        .HasForeignKey("DbSetCategoriaId");

                    b.HasOne("CGEntity.EntitiesDbSet.DbSetFavorecido", null)
                        .WithMany("Lancamentos")
                        .HasForeignKey("DbSetFavorecidoId");

                    b.HasOne("CGEntity.EntitiesDbSet.DbSetFornecedor", null)
                        .WithMany("Lancamentos")
                        .HasForeignKey("DbSetFornecedorId");

                    b.HasOne("CGEntity.EntitiesDbSet.DbSetInstituicao", null)
                        .WithMany("Lancamentos")
                        .HasForeignKey("DbSetInstituicaoId");

                    b.HasOne("CGEntity.EntitiesDbSet.DbSetModalidade", null)
                        .WithMany("Lancamentos")
                        .HasForeignKey("DbSetModalidadeId");

                    b.HasOne("CGEntity.EntitiesDbSet.DbSetPagador", null)
                        .WithMany("Lancamentos")
                        .HasForeignKey("DbSetPagadorId");

                    b.HasOne("CGEntity.EntitiesDbSet.DbSetSubCategoria", null)
                        .WithMany("Lancamentos")
                        .HasForeignKey("DbSetSubCategoriaId");
                });

            modelBuilder.Entity("CGEntity.EntitiesDbSet.DbSetSubCategoria", b =>
                {
                    b.HasOne("CGEntity.EntitiesDbSet.DbSetCategoria", null)
                        .WithMany("Subcategorias")
                        .HasForeignKey("DbSetCategoriaId");
                });

            modelBuilder.Entity("CGEntity.EntitiesDbSet.DbSetCategoria", b =>
                {
                    b.Navigation("Lancamentos");

                    b.Navigation("Subcategorias");
                });

            modelBuilder.Entity("CGEntity.EntitiesDbSet.DbSetFavorecido", b =>
                {
                    b.Navigation("Lancamentos");
                });

            modelBuilder.Entity("CGEntity.EntitiesDbSet.DbSetFornecedor", b =>
                {
                    b.Navigation("Lancamentos");
                });

            modelBuilder.Entity("CGEntity.EntitiesDbSet.DbSetInstituicao", b =>
                {
                    b.Navigation("Lancamentos");
                });

            modelBuilder.Entity("CGEntity.EntitiesDbSet.DbSetModalidade", b =>
                {
                    b.Navigation("Lancamentos");
                });

            modelBuilder.Entity("CGEntity.EntitiesDbSet.DbSetPagador", b =>
                {
                    b.Navigation("Lancamentos");
                });

            modelBuilder.Entity("CGEntity.EntitiesDbSet.DbSetSubCategoria", b =>
                {
                    b.Navigation("Lancamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
